name: "Blue-Green Deployment [Zero Down-Time]"

on:
  workflow_dispatch:
  # push:
    # branches:
      # master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set Up SSH Private Key
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}

    - name: Connect to SSH and Deploy
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} <<"SSHCONN"
        ###############################
        # Begin Blue-Green Deployment #
        ###############################

        echo "Pre-Deplay Active Port: $active_port"
        echo "Pre-Deploy Idle Port: $idle_port"

        # determine which PM2 app is currently idle
        current=$(grep "proxy_pass http://127.0.0.1:" /srv/www/production/my-repo-name/.config/.nginx/mydomain.com.conf | awk -F':' '{print $3}' | awk -F';' '{print $1}')
        if [ "$current" == "3001" ]; then
          active_app="blue"
          active_port="3001"
          idle_app="green"
          idle_port="3002"
        else
          active_app="green"
          active_port="3002"
          idle_app="blue"
          idle_port="3001"
        fi

        # prep the idle app for Next.js "build"
        cd /srv/www/production/my-repo-name-$idle_app
        git pull
        npm install

        # PRISMA migrates database changes BEFORE building the idle app
        # this ensures no build errors occur due to database changes
        npm run migrate:deploy

        # build the idle app - exit on failure
        if ! npm run build; then
          echo "Build failed on my-repo-name-$idle_app."
          exit 1
        fi

        # start the idle app in preparation of the switch-over
        pm2 start my-repo-name[$idle_app]

        # turn the idle app into the LIVE app
        sudo sed -i 's|proxy_pass http://127.0.0.1:'"$active_port"'|proxy_pass http://127.0.0.1:'"$idle_port"'|g' /srv/www/production/my-repo-name/.config/.nginx/mydomain.com.conf
        sudo nginx -s reload

        # stop the previously live, now idle, app
        #  - preserves resources
        #  - necessary to make the PM2 describe command work on next deployment)
        pm2 stop my-repo-name[$active_app]

        # save config for when server restarts
        pm2 save

        echo "Post-Deplay Active Port: $idle_port"
        echo "Post-Deploy Idle Port: $active_port"
        SSHCONN
